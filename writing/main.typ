#import "@preview/unequivocal-ams:0.1.2": ams-article, proof, theorem
#show: ams-article.with(
  title: [Leader Election in Adaptive LLM Agent Groups: Modeling, Analysis, and Controlled Simulation of Cooperative Supervision Dynamics],
  authors: (
    (
      name: "Samy Mihoubi",
      department: [Artificial Intelligence],
      organization: [Independent Researcher],
      email: "samy.mihoubi@hotmail.com",
      url: "samymihoubi.fr",
    ),
  ),
  abstract: "In emerging AI-driven ecosystems, groups of adaptive LLM agents need to self-organize, assign responsibilities, and coordinate collective action without constant human oversight. A central challenge in this context is leader election under conditions far more dynamic than those assumed in traditional distributed systems. This study investigates how democratic leadership emerges in LLMs agent groups, focusing on how adaptive memory, evolving reputations, coalition-building, and uneven access to information shape outcomes. We construct a controlled simulation framework that incrementally adds these complexity parameters, starting from a baseline election model where agents run as candidates, deliberate, and vote. Over repeated interactions, agents learn, adapt, and influence one another's strategies, producing non-trivial shifts in vote distribution, consensus stability, and leadership turnover. Our findings reveal the mechanisms that drive fair or distorted elections in artificial societies, offering design principles for robust multi-agent governance in contexts such as autonomous research teams, decentralized decision systems, and large-scale AI collaborations.",
  bibliography: bibliography("references.bib"),
)
#set par(
  first-line-indent: 1em,
  justify: true,
)

= Introduction
Advances in Artificial Intelligence (AI), especially in Large Language Models (LLMs), raise key questions about how AI agents elect a leader to supervise and coordinate a group in varied environments. The ability of an agent to analyze and respond to its environment is intrinsically tied to the specific LLM model it employs @Agashe2023 @Estornell2025 @LLMStrategy2025. There exists a wide variety of agents with varying levels of specialization in specific tasks, enabling context-dependent leader selection @Grötschla2025 @LLMSurvey2025 @Tran2025.

However, LLMs may introduce significant biases into the leader election process, stemming from their reasoning style, coherence, or inherent cognitive biases, which can positively or negatively influence their vote @Majumdar2025 @Laurito2025 @Xie2025. Recent studies show that LLMs exhibit a preference for content generated by other LLMs, which could distort election outcomes in favor of certain agent types or communication styles @Laurito2025. Additionally, the integration of LLMs into multi-agent systems has been explored in various domains, including political simulation, economic modeling, and social network analysis @FoundationAgents2025 @ExploreLLM2024 @Jin2025 @IndividualToSociety2024. Moreover, models have natural biases that can affect their decision-making processes such as the number of parameters used, training data distribution, and pre-existing heuristics. These biases can lead to systematic distortions in the election process, favoring certain agents or communication styles over others, and potentially undermining the fairness and effectiveness of the leader election mechanism.

In this paper, we consider a mini model version of adaptive GPT-5, GPT-4 and LLaMA-3 agent groups where each agent is represented as a computational entity with memory, observation capabilities, and the ability to adapt its behavior based on social interactions. Unlike traditional distributed computing models that assume static nodes communicating via message passing, our framework treats agents as mobile, context-aware entities capable of dynamic role changes and evolving cooperation patterns @Dodwadmath2025 @Haase2025 @MALM2024. We formalize the problem of leader election within these adaptive groups by investigating different leader election mechanisms through controlled simulations, demonstrating how these protocols perform under varying conditions of group size, agent heterogeneity, and environmental complexity @Erisken2025 @LLMSurvey2023 @Chen2023.

Through this study, we aim to study the mechanisms by which leadership emerges and stabilizes in AI-driven multi-agent systems, leading to the election of a supervisor, thereby bridging gaps between distributed computing, social dynamics, and artificial intelligence research @Estornell2025 @Guo2024 @Tran2025 @Pang2024.

= Related work

== Multi-agent systems (MAS)
Numerous studies exist on phenomena resembling leader emergence and leader election within multi-agent groups @Dodwadmath2025 @AgentBasedLeaderElection2025 @Byrne1994 @McBurney2004. However, these systems remain highly theoretical. They rely on simplified models and deterministic algorithmic protocols without the use of adaptive artificial intelligence. Agents are often modeled as mobile entities in anonymous graphs, using protocols based on BFS or MST tree construction to coordinate leader selection @AgentBasedLeaderElection2025.

Recent benchmarks such as AGENTSNET are proposed to evaluate the ability of multi-agent systems to self-organize, coordinate, and communicate effectively, including leader election tasks @Grötschla2025. These benchmarks use message-passing protocols and evaluate models on various graph topologies and sizes, providing a robust framework for comparing different approaches. Additionally, the use of mediators in multi-agent reinforcement learning has been shown to promote fair leadership in Stackelberg games, demonstrating the potential of dynamic leader selection mechanisms @Dodwadmath2025.

== LLM Agents
More recent research exploring the use of AI (in particular agents based on large language models) is still in the minority but growing rapidly @Agashe2023 @Guo2024 @Estornell2025 @GEDI2024 @LLMSurvey2025 @LLMSurvey2023. Within this context, some works propose integrating mechanisms inspired by voting theory, such as GEDI, which use ordinal preferential voting to make decision-making in LLM-based multi-agent systems more robust and improve reasoning @GEDI2024. GEDI introduces a range of collective decision-making (CDM) methods rooted in human socio-political practices, demonstrating that diversifying CDM approaches can improve the reasoning capabilities and robustness of leading LLMs, even with as few as three agents.

Furthermore, the emergence of voting behaviors in LLM agents introduces new considerations for election process design. Studies of GPT-4 and LLaMA-2 voting patterns reveal that presentation order, voting methods, and agent personas significantly influence election outcomes @Yang2024. These findings suggest that election protocols in LLM-based systems must explicitly address potential biases and implement mechanisms to ensure fair representation of agent preferences @Majumdar2025. For example, incorporating personas into LLM voting can reduce biases and enhance alignment with human choices, while the Chain-of-Thought approach has shown limited impact on improving prediction accuracy @Yang2024.

Recent surveys highlight the transition from isolated LLM models to collaboration-centric approaches, emphasizing the need for robust coordination and communication structures to enable effective multi-agent collaboration @Tran2025 @guo2024largelanguagemodelbased @LLMSurvey2025. The use of LLMs in multi-agent systems is also explored in the context of social simulation, where platforms like GenSim and ElectionSim enable large-scale, realistic simulations of societal phenomena @tang2025gensimgeneralsocialsimulation @ElectionSim2024.

== Election process within MAS
The study of election processes in multi-agent systems covers several key dimensions that distinguish AI-driven systems from traditional distributed computing approaches. Traditional leader election algorithms, such as the Raft consensus protocol, have been adapted to coordinate multi-agent formations, illustrating the potential integration of distributed consensus protocols into dynamic agent management @Tariverdi2023 @Voting2006 @colley2021unravellingmultiagentrankeddelegations. However, these traditional methods rely on assumptions of deterministic behavior and perfect information exchange, conditions rarely met in large language model (LLM)-based agent environments.

Recent work has proposed more advanced election mechanisms that take into account the specific characteristics of intelligent agents. Combining fuzzy information evolution models with random leader election mechanisms represents progress toward more realistic decision-making systems, particularly through their application to the information diffusion models of DeGroot and Hegselmann-Krause @Jia2024. These approaches incorporate the possibility that agents may have incomplete or uncertain information, which closely reflects the operation of LLM agents faced with limited contextual windows and potentially biased training data.

Leader selection proves particularly complex when considering system controllability and weight adjustment in directed topology networks @Zhao2015. Unlike conventional systems, where leader selection relies primarily on network connectivity and fault tolerance, LLM-based systems must integrate the specific capabilities, specialization, and dynamic adaptation of agents to changing contexts @Estornell2025 @LLMSurvey2023 @Chen2023. This requires moving beyond static algorithmic approaches to develop mechanisms capable of assessing agent performance and suitability in real time.

Furthermore, the resilience of multi-agent collaboration in the event of failure influences the design of electoral processes, as hierarchical structures have demonstrated greater fault tolerance than flat organizational models @Huang2024. These findings have implications for the structuring of elections to ensure system stability even when some agents engage in inconsistent or biased behavior, a recurring problem in LLM-based systems due to the inherent limitations of the models and their sensitivity to response times.

= Experimental framework
The experimental protocol aims to model and analyze leader election dynamics within a group of X autonomous GPT-5, GPT-4 and LLaMA-3 agents tasked with a collective abstract goal. We implement three experimental conditions: (A) comprehensive election process where agents engage in self-nomination, participate in free-form discussion phases, and initiate voting procedures; (B) streamlined election process where agents proceed directly from self-nomination to voting; and (C) baseline condition where agents vote immediately without prior candidacy or discussion phases. Each agent is assigned an internal identifier (Agent-X) undisclosed to others and a public identifier consisting of a fixed-length UUID used exclusively for communication to prevent identification bias @Majumdar2025.

We instantiate 9 agents using the GPT-5-mini via OpenAI’s new Responses API, GPT-4o-mini models via OpenAI’s Chat Completions API, and llama-3.3-70B via OpenRouter's Chat Completions API, with temperatures sampled uniformly from 0.65 to 0.75 to maintain a coherent dialogue (verbosity: medium). We conduct a minimum of 50 independent runs for each condition to ensure statistical robustness. Condition A comprises three phases: self-nomination, public discussion strictly formatted in JSON, and voting triggered once at least the required threshold of agents (fixed at two-thirds) propose to vote. The discussion supports explicit mentions via UUIDs, enabling the construction of a directed mention graph on which degree and betweenness centralities are computed. All agent outputs adhere to strict JSON response formats, prohibiting any free-text replies. Agents possess a "memory" (all the ongoing discussions are given in the prompt) feature allowing them to retain and reference previous interactions, enhancing the continuity and coherence of discussions.

The voting phase requires each agent to cast a single vote excluding self-votes, resulting either in an elected leader or a tie labeled “ex-aequo.” Condition B bypasses nomination and discussion phases, proceeding directly to voting. Condition C selects the leader uniformly at random. Variability is controlled through logging exact API parameters, request IDs, and implementing a retry policy.

Collected metrics include vote initiator, round of vote proposal, vote distribution, agents’ centrality scores within the mention graph, message counts, mentions received, tokens used per response for each agent and response time.

This purely discursive and abstract setup isolates social election mechanisms in a controlled, reproducible environment while acknowledging limitations due to model simplification, ordering biases, and LLM representational biases.

== Hypotheses

We hypothesize (H1) that diversifying speaking order mitigates turn-order biases while central agents within the network retain an inherent advantage. We propose (H2) that elections conducted under Condition A, which includes both debate and voting, exhibit greater variability in vote distribution compared to Condition B, where agents vote directly without prior interaction. We hypothesize (H3) that elected agents have moderate centrality scores, indicating that factors beyond network position—such as timing and charisma—play a significant role in determining election outcomes. We examine (H4) whether performing a salient positive action, such as initiating a vote, leads to a significant increase in votes for the responsible agent, reflecting a halo effect. Finally, we hypothesize (H5) that in homogeneous groups, observable actions like taking initiatives are stronger predictors of electoral success than centrality alone.


== Network Centrality and Electoral Dynamics
The relationship between network position and electoral success constitutes a fundamental aspect of our investigation. Drawing from social network theory, we hypothesize that agents occupying central positions in the mention graph will demonstrate electoral advantages, potentially creating systematic biases in leadership selection.

=== Centrality Measures
We employ four primary centrality measures, each capturing different aspects of network positioning:
- *Degree centrality* $C_D (v) = "deg"(v) / (n-1)$ measures overall connectivity, indicating agents' general integration within the discussion network, where $"deg"(v)$ represents the total degree of vertex $v$ and $n$ the number of agents.
- *Betweenness centrality* identifies agents serving as information bridges, potentially wielding disproportionate influence over communication flows, where $sigma_(s t)(v)$ represents the number of shortest paths from $s$ to $t$ passing through $v$.
$ C_B (v) = sum_(s != v != t) (sigma_(s t)(v)) / (sigma_(s t)) $
- *In-degree centrality* $C_("in") (v) = "in-deg"(v) / (n-1)$ specifically captures popularity through received mentions, serving as a direct measure of attention attraction.
- *Page-Rank centrality* incorporates recursive importance with damping factor $d = 0.85$, where $M(v)$ represents agents mentioning $v$ and $L(u)$ the out-degree of $u$.
$ "PR"(v) = (1-d)/n + d sum_(u in M(v)) ("PR"(u)) / (L(u)) $

=== Speaking Order Diversity
To mitigate biases arising from systematic patterns in speaking order (e.g., an agent consistently speaking first), we quantify speaking position diversity using *Shannon entropy*. For each agent, we calculate the entropy of their speaking positions across all discussion turns:
$
  H(v) = -sum_(i=1)^n p(i) log_2 p(i)
$
where $p(i)$ is the probability that agent $v$ speaks at position $i$ (e.g., first, second, etc.), and $n$ is the total number of possible positions. This measure evaluates the uniformity of an agent's speaking positions: high entropy indicates that the agent speaks at different positions uniformly, while low entropy suggests a tendency to speak at the same position repeatedly.

We normalize this entropy by its maximum possible value $log_2(n)$ to obtain a randomization score between 0 and 1:
$
  "Randomization Score"(v) = frac(H(v), log_2(n))
$
A score close to 1 indicates that an agent's speaking positions are well-distributed, reducing the risk of bias due to order effects. This metric ensures that no agent gains an unfair advantage from consistently occupying early or late positions in the discussion.

#image("figures/figure_1_speaking_order_entropy.png")
*Figure 1. Speaking Order Randomization and Diversity Across Agents*

To validate this randomization protocol, we empirically analyze speaking order distributions across agents. Figure 1 confirms that speaking positions are effectively randomized, with near-maximal entropy and balanced first-speaker allocation, ensuring that no agent systematically benefited from turn-order biases.

= Results

#image("figures/figure_2_vote_share_heatmap.png")
*Figure 2. Electoral Dynamics and Vote Distribution Patterns Across LLM Architectures and Election Conditions*

Electoral behavior comparison across three LLM models under different voting conditions. Top panels show average vote shares (left) and their variability (right), with condition A (active election) displaying highest variance. Bottom left reveals model-specific patterns: GPT-5-mini produces more distributed elections (55.3% of agents receive votes in condition B) while GPT-4o-mini concentrates votes on fewer candidates (23.8%). Bottom right confirms balanced experimental design (n=50 per condition per model).

#image("figures/figure_3_kaplan_meier.png")
*Figure 3. Time-to-Vote Initiation: Survival Analysis of Discussion Duration by LLM Model*

Kaplan-Meier survival curves revealing distinct temporal strategies across LLM architectures. GPT-5-mini and Llama-3.3-70B demonstrate rapid vote initiation with ~90% proposing votes within 2 discussion turns, while GPT-4o-mini exhibits extended deliberation patterns with median proposal times exceeding 8 turns. The right panel shows detailed survival functions (n=50 per model) confirming these behavioral differences. This temporal divergence directly correlates with electoral success rates, suggesting that prolonged discussion phases may erode the strategic advantage of vote initiation.

#image("figures/figure_4_centrality_scatter.png")
*Figure 4. Centrality Measures and Electoral Success*

Network positioning analysis challenging traditional assumptions about centrality-based electoral advantage. Left scatter plot reveals weak positive correlation (ρ = 0.305, p < 0.001) between centrality scores and vote shares across all models, contradicting predictions of strong network effects. Right box plot shows elected agents possess marginally higher median centrality than non-elected agents, but with substantial distributional overlap. Color coding demonstrates model-specific clustering patterns, with GPT-4o-mini agents (gray) showing lower overall centrality engagement compared to GPT-5-mini (orange) and Llama-3.3-70B (red) agents.

#image("figures/Figure_5_initiating.png")
*Figure 5. Initiating Speech and Vote Outcomes*

Strategic initiative effectiveness across LLM models, revealing the critical interaction between discussion duration and electoral outcomes. GPT-5-mini agents achieve highest success rate (78.46%) when initiating votes, followed by Llama-3.3-70B (63.72%), while GPT-4o-mini shows markedly lower success (39.10%). This pattern inversely correlates with discussion duration preferences (Figure 3), supporting the hypothesis that prolonged deliberation erodes the first-mover advantage by providing competitors additional opportunities to build social capital and alternative coalitions. Error bars represent 95% confidence intervals (n=50 per model).

= Discussion
The results of this study reveal the complex interplay between model architecture, discussion dynamics, and electoral outcomes in AI agent democracies. The significant differences in vote share variability and the proportion of agents receiving votes across different models and conditions underscore the importance of both individual agent behavior and collective group dynamics.

First, H1 posited that diversifying speaking order would reduce turn-order biases but not fully eliminate the advantage of central agents. Our findings confirm this hypothesis: while the randomization protocol achieved near-maximal entropy in speaking positions (Figure 1), central agents retained a residual advantage. This suggests that factors beyond turn order—such as the content of contributions or agent reputation—continue to influence electoral outcomes, even in controlled settings.

Second, H2 predicted that elections in Condition A (debate + vote) would exhibit greater variability in vote distribution compared to Condition B (direct vote). This hypothesis is strongly supported: Condition A displayed the highest variance in vote shares (Figure 2, right panel), indicating that deliberation introduces unpredictability and diversity in agent preferences. This aligns with the idea that interactive processes foster more dynamic and less deterministic electoral behaviors.

Third, H3 hypothesized that elected agents would exhibit moderate centrality scores, implying that additional factors—such as timing or "charisma"— play a role in election outcomes. Our analysis corroborates this: elected agents did not systematically display the highest centrality scores (Figure 4). Instead, their success appeared to stem from a combination of network position and behavioral traits, such as initiative and persuasiveness. This challenges traditional assumptions about the primacy of structural centrality in leadership emergence.

Fourth, H4 proposed that initiating a salient positive action, such as proposing a vote, would significantly increase votes for the agent responsible—a halo effect. The data robustly supports this hypothesis: agents initiating votes achieved the highest success rates, particularly in the GPT-5-mini model (78.46%, Figure 5). This effect was inversely correlated with discussion duration (Figure 3), suggesting that early and decisive actions confer a strategic advantage in electoral contexts.

Finally, H5 anticipated that in homogeneous groups, observable actions (e.g., initiatives) would better predict electoral success than centrality alone. This hypothesis is fully validated: initiatives were a stronger predictor of success than network metrics, especially in models like GPT-5-mini and Llama-3.3-70B (Figure 5). This underscores the importance of proactive behavior in shaping leadership outcomes, even in groups where agents share similar capabilities.

= Limitations and Future Work
While our study provides valuable insights, it is not without limitations. The reliance on simulated environments may not fully capture the complexities of real-world interactions. Different parameters and configurations could lead to varying outcomes. Future research should explore these dynamics in more diverse and realistic settings to capture theoretical social dynamics among LLMs to apply them in human-based contexts, potentially incorporating additional factors such as tools, resources available to agents, and the possibility of private discussions among agents.
Furthermore, mixing different agent architectures (e.g., different LLMs or models) could yield new insights into their collective behavior and decision-making processes.

Recent advances in large-scale social simulation platforms, such as GenSim and ElectionSim, demonstrate the potential for simulating up to 100,000 agents and aligning voter distributions with real-world demographics @tang2025gensimgeneralsocialsimulation @ElectionSim2024. These platforms could serve as valuable tools for extending the scope and realism of future studies on LLM-based leader election. Additionally, the use of LLMs in multi-agent systems has been explored in various domains, including political simulation, economic modeling, and social network analysis, providing a rich context for future research @FoundationAgents2025 @ExploreLLM2024 @Jin2025 @IndividualToSociety2024 @Kim2025.

= Application in Real-World Scenarios
The insights gained can inform the design of more effective collaborative systems, whether in virtual teams, online platforms, or human-AI interaction scenarios. Workforce-based simulation tools could emerge from this research, allowing organizations to model and optimize their decision-making processes by simulating various group dynamics and leadership election scenarios.

Recent applications of LLM-based agents in political science, economics, and social network analysis demonstrate their growing role in simulating and understanding complex social dynamics.

In political science, LLM agents are increasingly used to model complex political decision-making processes, simulate voter behavior, and analyze policy impacts. For instance, platforms like GovSim create controlled environments where AI agents must collectively manage shared resources (e.g., fisheries, pastures, or pollution control), mirroring real-world governance challenges. Experimental results demonstrate that only the most advanced models (such as GPT-4o) achieve sustainable cooperation, with survival rates peaking at 54%, while revealing that successful outcomes depend critically on inter-agent communication and ethical reasoning frameworks like universalization @Piatti2024. Beyond resource management, these agents simulate diplomatic interactions, party competition, and ideological detection, providing nuanced insights into electoral forecasting and policy evaluation—though accurately capturing the inherent uncertainty and complexity of political systems remains an ongoing challenge @ExploreLLM2024.

In economics, LLM-driven frameworks extend beyond traditional financial modeling to include sophisticated simulations of market dynamics and economic reasoning. Tools like Econagent and TradingGPT incorporate hierarchical memory systems and debate mechanisms to replicate human-like decision-making in financial trading and macroeconomic scenarios @LLMSurvey2025. However, recent evaluations using the EconNLI dataset expose significant limitations in current models' ability to correctly infer causal economic relationships—such as predicting how changes in money supply affect purchasing power—with even advanced models like GPT-4 producing unreliable analyses without specialized fine-tuning @guo2024econnlievaluatinglargelanguage. These frameworks enable detailed socio-economic network analysis, modeling information flows, resource allocation patterns, and trust-building mechanisms, but their application in high-stakes economic forecasting requires improved validation protocols to address persistent issues of hallucination and reasoning errors @ExploreLLM2024.

In biomedical research, LLM-based agents like BioDiscoveryAgent are transforming genetic perturbation experiments through closed-loop, interpretable experimentation @roohani2025biodiscoveryagentaiagentdesigning. Using models such as Claude 3.5 Sonnet, the agent strategically selects genes for CRISPR screens, achieving a 21% improvement in identifying relevant perturbations and a 46% boost in non-essential gene tasks compared to Bayesian baselines. By integrating biological knowledge, experimental data, and tools for literature search and critique, it autonomously designs experiments to maximize the discovery of phenotype-associated genes. Its ability to predict combinatorial gene perturbations with over twice the accuracy of random baselines underscores the potential of LLM agents for drug target identification and disease research.

Furthermore, LLM agents are increasingly used to simulate large-scale social phenomena, such as public opinion dynamics and collective behavior, revealing both the potential and the risks of emergent biases in multi-agent systems @Haase2025. For example, studies have shown that LLM agents can replicate human-like social behaviors, including conformity and majority influence, but also highlight the need for robust validation protocols to address issues of reproducibility and ethical oversight @Haase2025.
These real-world applications underscore the importance of addressing biases and ensuring the credibility of LLM anthropomorphism, particularly when agents are tasked with high-stakes decision-making or large-scale simulations @LLMSurvey2025.

= Acknowledgments

A huge thanks to Alaric Patault for his invaluable feedback and support throughout this research process that could not have been completed without his expertise.

Thanks to the following peer reviewers for their valuable feedback and suggestions, which have greatly improved the quality of this work: A. Patault, T. Gagelin, H. Al Hashemi.

= Conclusion

As a conclusion, we draw several key insights from our research findings.

Results suggest that models like GPT-5-mini and Llama-3.3-70B, which favor rapid vote initiation, may be better suited for environments where quick decision-making is crucial. In contrast, GPT-4o-mini's extended deliberation may benefit scenarios requiring thorough discussion and consensus-building, albeit at the cost of immediate electoral success. It also suggests that many criteria influence the election of agents within a MAS that we can call "agent charisma.", this charisma is not necessarily linked to centrality or network position, but rather to the ability to initiate discussions and votes effectively. The charisma can be understood as a combination of factors, including communication style, persuasive abilities, and social awareness, which together enhance an agent's influence within the group.
The weak correlation between centrality measures and electoral success challenges traditional assumptions about the advantages of network positioning in leader election. While agents with higher centrality scores tend to receive more votes, the distribution of these votes is not as skewed as expected, indicating that other factors, such as discussion dynamics and agent behavior, play a significant role in determining electoral outcomes.

The analysis of speaking order diversity highlights the importance of mitigating biases arising from systematic patterns in agent behavior. The randomization score provides a useful metric for evaluating the fairness of speaking positions, ensuring that no agent is consistently advantaged or disadvantaged by their position in the speaking order.
The observed model-specific variations in electoral behavior align with recent findings on the influence of voting methods, presentation order, and agent personas on LLM voting patterns @Yang2024. These results highlight the need for careful design of election protocols in LLM-based systems to mitigate biases and ensure fair representation. Additionally, the integration of LLMs into multi-agent systems has been shown to enable the simulation of complex social phenomena, such as opinion dynamics, information diffusion, and collective decision-making @FoundationAgents2025 @ExploreLLM2024 @Jin2025 @IndividualToSociety2024.

In summary, this study highlights the complex interplay between model architecture, discussion dynamics, and electoral outcomes in AI agent democracies. The findings challenge traditional assumptions about centrality and network position, emphasizing the importance of behavioral traits and strategic actions in determining leadership success. These insights have implications for the design of more effective collaborative systems and contribute to our understanding of multi-agent dynamics in AI-driven environments.
